<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on zy6lc</title>
    <link>https://zy6lc.github.io/</link>
    <description>Recent content in Home on zy6lc</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 02 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://zy6lc.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>双数组trie树</title>
      <link>https://zy6lc.github.io/%E5%8F%8C%E6%95%B0%E7%BB%84trie%E6%A0%91/</link>
      <pubDate>Tue, 05 May 2020 18:30:36 +0800</pubDate>
      
      <guid>https://zy6lc.github.io/%E5%8F%8C%E6%95%B0%E7%BB%84trie%E6%A0%91/</guid>
      <description>概念 百度百科
里面有一些语言的实现。
双数组trie树 双数组trie树是trie的一中实现，用了两个数组存储整个trie树，好处是什么呢？通过双数组trie树的构造过程就可以知道（构造方式有多种，但是核心思路是一样的）。
第一次构造 假如现在我有一个词典，词典中只有一个词语：
三天三夜  现在我要用双数组的方式构造trie树：
a.首先给这个词语的每个字符一个编码，然后初始化两个一定长度，并且元素全为0的数组A、B，再然后令B[0]=1，index=0，迭代index的公式为index=code+1，为了后续的匹配，令B[index]=child.index，A[index]=0说明位置空，A[index]=code+1说明位置被占用，并且可以通过code知道具体的字符：
   char 三 天 夜     CODE 0 1 2       INDEX 0 1 2 3 4 5     A 0 0 0 0 0 0   B 1 0 0 0 0 0    b.现在开始遍历词典，构造A、B数组：
​	1.字符‘三’，code=0，index=code+1=1，因为A[index]=A[1]=0，该位置未占用，这个时候就可以令A[1]=value=code+1，则A[1]=1；
   INDEX 0 1 2 3 4 5     A 0 1 0 0 0 0   B 1 0 0 0 0 0    ​	2.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://zy6lc.github.io/about/</link>
      <pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zy6lc.github.io/about/</guid>
      <description>email: zy6hot@hotmail.com</description>
    </item>
    
    <item>
      <title>unpack终端万能解压工具 mac/ubuntu 命令行 command line</title>
      <link>https://zy6lc.github.io/unpack%E7%BB%88%E7%AB%AF%E4%B8%87%E8%83%BD%E8%A7%A3%E5%8E%8B%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Sat, 01 Feb 2020 21:27:05 +0800</pubDate>
      
      <guid>https://zy6lc.github.io/unpack%E7%BB%88%E7%AB%AF%E4%B8%87%E8%83%BD%E8%A7%A3%E5%8E%8B%E5%B7%A5%E5%85%B7/</guid>
      <description>keywords: unpack 终端 解压 命令行 mac ubuntu
 问题描述 我们经常会遇到的压缩文件有.zip、.7z、.tar.gz等等，但是在终端中要用不同的工具去解压，希望有一个统一的命令去解压它们，于是有了unpack。
#!/usr/bin/env bash if [[ -z &amp;quot;$@&amp;quot; ]]; then echo &amp;quot; ${0##*/} &amp;lt;archive&amp;gt; - extract common file formats)&amp;quot; exit fi req_progs=(7z unrar unzip) for p in ${req_progs[@]}; do hash &amp;quot;$p&amp;quot; 2&amp;gt;&amp;amp;- || \ { echo &amp;gt;&amp;amp;2 &amp;quot; Required program \&amp;quot;$p\&amp;quot; not installed.&amp;quot;; exit 1; } done if [ ! -f &amp;quot;$@&amp;quot; ]; then echo &amp;quot;File &amp;quot;$@&amp;quot; doesn&#39;t exist&amp;quot; exit fi case &amp;quot;$@&amp;quot; in *.</description>
    </item>
    
  </channel>
</rss>